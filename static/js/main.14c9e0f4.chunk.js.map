{"version":3,"sources":["redux/messages/messages-actionTypes.js","components/Message/Message.jsx","redux/messages/messages-actions.js","components/Chat/Chat.jsx","App.js","redux/store.js","redux/messages/messages-reducer.js","index.js"],"names":["ADD_MESSAGE","DELETE_MESSAGE","connect","dispatch","addMessage","text","type","actionTypes","payload","messagesActions","message","setMessage","useState","className","onSubmit","e","preventDefault","trim","length","alert","newMessage","id","uuidv4","value","onChange","target","state","messages","deleteMessage","onClick","map","Date","toLocaleTimeString","slice","App","rootReducer","combineReducers","filter","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAAO,MAAMA,EAAc,eACdC,EAAiB,kB,yBC4CfC,kBAAQ,MAJKC,IAAD,CACzBC,WAAaC,GAASF,ECxCGE,KAAD,CACxBC,KAAMC,EACNC,QAASH,IDsCsBI,CAA2BJ,OAG7CH,EAtCf,YAAkC,IAAjB,WAAEE,GAAc,EAC/B,MAAOM,EAASC,GAAcC,mBAAS,IAkBvC,OACE,8BACE,uBAAMC,UAAU,UAAUC,SAlBJC,IAExB,GADAA,EAAEC,iBAC4B,IAA1BN,EAAQO,OAAOC,OAGjB,OAFAC,MAAM,kCACNR,EAAW,IAGb,MAAMS,EAAa,CAACf,KAAMK,EAASW,GAAIC,eACvClB,EAAWgB,GACXT,EAAW,KAST,UACE,uBACEY,MAAOb,EACPJ,KAAK,OACLkB,SAVeT,IACrBJ,EAAWI,EAAEU,OAAOF,QAUdV,UAAU,kBAEZ,wBAAQP,KAAK,SAASO,UAAU,2BEEzBX,mBARUwB,IAAD,CACtBC,SAAUD,EAAMC,aAGUxB,IAAD,CACzByB,cAAgBP,GAAOlB,ED3BI,CAC3BG,KAAMC,EACNC,QCyB8Da,OAGjDnB,EAhCf,YAA4C,IAA9B,SAAEyB,EAAF,cAAYC,GAAiB,EACzC,MAAMC,EAAWd,IACfa,EAAcb,EAAEU,OAAOJ,KAKzB,OACE,sBAAKR,UAAU,OAAf,UACE,oBAAIA,UAAU,gBAAd,SACGc,GACCA,EAASG,KAAIpB,GACX,qBAAqBW,GAAIX,EAAQW,GAAIR,UAAU,eAAegB,QAASA,EAAvE,UACGnB,EAAQL,KACT,sBAAMQ,UAAU,YAAhB,UAA6B,IAAIkB,MAAOC,qBAAqBC,MAAM,GAAI,OAFhEvB,EAAQW,QAOvB,cAAC,EAAD,UCdSa,MARf,WACE,OACE,8BACE,cAAC,EAAD,O,kBCDN,MAAMC,EAAcC,0BAAgB,CAClCT,SCH6B,WAAoC,IAAnCD,EAAkC,uDAA1B,IAAI,KAAEpB,EAAF,QAAQE,GAAc,uCAChE,OAAQF,GACN,KAAKC,EACH,MAAO,IAAImB,EAAOlB,GAEpB,KAAKD,EACH,OAAOmB,EAAMW,QAAQ3B,GAAYA,EAAQW,KAAOb,IAElD,QACE,OAAOkB,MDDEY,MAFDC,sBAAYJ,EAAaK,iCECvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.14c9e0f4.chunk.js","sourcesContent":["export const ADD_MESSAGE = \"messages/Add\";\nexport const DELETE_MESSAGE = \"messages/Delete\";\n","import \"./Message.css\";\nimport * as messagesActions from \"../../redux/messages/messages-actions\";\nimport { connect } from \"react-redux\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n\n\nfunction Message({ addMessage }) {\n  const [message, setMessage] = useState(\"\");\n\n  const handleAddMessage = (e) => {\n    e.preventDefault();\n    if (message.trim().length === 0) {\n      alert(\"Please enter your message\");\n      setMessage(\"\");\n      return;\n    }\n    const newMessage = {text: message, id: uuidv4()}\n    addMessage(newMessage);\n    setMessage(\"\");\n  };\n\n  const onInputChange = (e) => {\n    setMessage(e.target.value);\n  };  \n\n  return (\n    <div>\n      <form className=\"Message\" onSubmit={handleAddMessage}>\n        <input\n          value={message}\n          type=\"text\"\n          onChange={onInputChange}\n          className=\"Message-input\"\n        />\n        <button type=\"submit\" className=\"Message-button\"></button>\n      </form>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addMessage: (text) => dispatch(messagesActions.addMessage(text)),\n});\n\nexport default connect(null, mapDispatchToProps)(Message);\n","import * as actionTypes from \"./messages-actionTypes\";\n\nexport const addMessage = (text) => ({\n  type: actionTypes.ADD_MESSAGE,\n  payload: text,\n});\n\nexport const deleteMessage = (message) => ({\n  type: actionTypes.DELETE_MESSAGE,\n  payload: message,\n});\n","import \"./Chat.css\";\nimport { connect } from \"react-redux\";\nimport * as messagesActions from \"../../redux/messages/messages-actions\";\nimport Message from \"../Message/Message\";\n\nfunction Chat({ messages, deleteMessage }) {\n  const onClick = (e) => {    \n    deleteMessage(e.target.id);\n  };\n\n  \n\n  return (\n    <div className=\"Chat\">\n      <ul className=\"Chat-messages\">\n        {messages &&\n          messages.map(message => (\n            <li key={message.id} id={message.id} className=\"Chat-message\" onClick={onClick}>\n              {message.text}\n              <span className=\"Chat-date\">{new Date().toLocaleTimeString().slice(0, -6)}</span>\n            </li>\n          \n          ))}\n      </ul>\n      <Message />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  messages: state.messages,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteMessage: (id) => dispatch(messagesActions.deleteMessage(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\n","import Chat from \"./components/Chat/Chat\";\n\nfunction App() {\n  return (\n    <div >\n      <Chat />\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers } from \"redux\";\nimport { messagesReducer } from \"../redux/messages/messages-reducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst rootReducer = combineReducers({\n  messages: messagesReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import * as actionTypes from \"./messages-actionTypes\";\n\nexport const messagesReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case actionTypes.ADD_MESSAGE:\n      return [...state, payload];\n\n    case actionTypes.DELETE_MESSAGE:\n      return state.filter((message) => message.id !== payload);\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}